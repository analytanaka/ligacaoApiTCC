const db = require('../database/connection'); 

module.exports = {
    async listarUsuario(request, response) {
        try {    
            const sql =`SELECT usu_id, usu_login, usu_senha, usu_nome, usu_email, usu_fone, usu_fotoperfil,
             usu_ativo = 1 AS usu_ativo
             FROM usuario
             WHERE usu_ativo = 1;`;       
            const usuario = await db.query(sql);
          

            return response.status(200).json({
                sucesso: true, 
                mensagem: 'Lista de usuário.', 
                dados: usuario [0]
              
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });
        }
    }, 
    async listarPerfil(request, response) {
        try {    
            const { usu_id } = request.params;
            const sql =`SELECT usu_id, 
                                usu_login, 
                                usu_senha, 
                                usu_nome, 
                                usu_email, 
                                usu_fone, 
                                usu_fotoperfil
                            FROM usuario
                            WHERE usu_id = ?;`;     
            const values = [usu_id];
            const usuario = await db.query(sql , values);
          

            return response.status(200).json({
                sucesso: true, 
                mensagem: 'Lista de usuário.', 
                dados: usuario [0]
              
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });
        }
    }, 
    async cadastrarUsuario(request, response) {
        try {       
            const {usu_login, usu_senha, usu_nome, usu_email, usu_fone, usu_fotoperfil} = request.body;
            const sql = `insert into usuario (usu_login,        usu_senha,        usu_nome,        usu_email,        usu_fone,        usu_fotoperfil)
                         values (?, ?, ?, ?,?,?)`
            const values =  [usu_login, usu_senha, usu_nome, usu_email, usu_fone, usu_fotoperfil];
            const execSql = await db.query(sql , values);
            const usu_id = execSql[0].insertId;
          
            return response.status(200).json({
                sucesso: true, 
                mensagem: 'Cadastro de usuário efetuado com sucesso.', 
                dados: usu_id
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });
        }
    }, 
    async editarUsuario(request, response) {
        try {        
            const {usu_login, usu_senha, usu_nome, usu_email, usu_fone, usu_fotoperfil} = request.body;
            const {usu_id}  = request.params;
            const sql = `UPDATE usuario SET usu_login = ?,   
                 usu_senha = ?,    
                 usu_nome = ?, 
                 usu_email = ?, 
                 usu_fone = ?,     
                usu_fotoperfil = ? WHERE usu_id = ?;`;
                
            const values = [usu_login, usu_senha, usu_nome, usu_email, usu_fone, usu_fotoperfil, usu_id]
            const atualizaDados = await db.query(sql , values)

            return response.status(200).json({
                sucesso: true, 
                mensagem:`Usuário ${usu_id} atualizado com sucesso!`, 
                dados: atualizaDados[0].affectedRows
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });
        }
    }, 
    async apagarUsuario(request, response) {
        try {
            const { usu_id } = request.params;
            const sql = `DELETE FROM usuario WHERE usu_id = ?`
            const values = [ usu_id ] ;
            const deletar = await db.query(sql, values);

            return response.status(200).json({
                sucesso: true, 
                mensagem: `Usuário ${usu_id} excuído!`, 
                dados: deletar[0].affectedRows
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });
        }
    }, 
    async ocultarUsuario(request,response){
        try{
            const usu_ativo = false;
            const{usu_id} = request.params;
            const sql = `UPDATE usuario SET usu_ativo = ?
            WHERE usu_id = ?`;
            const values =[usu_ativo, usu_id];
            const atualizacao= await db.query(sql,values);

            
            return response.status(200).json({
                sucesso: true, 
                mensagem:`Usuário ${usu_id} excluido com sucesso!`, 
                dados: atualizacao[0].affectedRows
            });
        } catch (error) {
            return response.status(500).json({
                sucesso: false,
                mensagem: 'Erro na requisição.',
                dados: error.message
            });

        }
    },  


async login(request, response) {
    try {    

        const {usu_email, usu_senha, usu_fone} = request.body
        const sql =`SELECT usu_id, usu_login, usu_nome, usu_fotoperfil FROM usuario
         WHERE usu_email = ? AND usu_senha = ? AND usu_fone = ? AND usu_ativo = 1;`;   

        const values = [usu_email, usu_senha, usu_fone];

        const usuario = await db.query(sql, values);

        const nItens = usuario[0.].length;

        if(nItens < 1 ){
            return response.status(403).json({
                sucesso: false, 
                mensagem: 'Login e/ou senha inválido.', 
                dados: null,
              
            });
        }
      

        return response.status(200).json({
            sucesso: true, 
            mensagem: 'Login efetuado com sucesso.', 
            dados: usuario [0]
          
        });
    } catch (error) {
        return response.status(500).json({
            sucesso: false,
            mensagem: 'Erro na requisição.',
            dados: error.message
        });
    }
}, 
};